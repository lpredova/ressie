version: '2'

services:
# Ressie MySql
  ressie_operational_db:
    build: database/
    ports:
      - "3307:3306"
    volumes:
      - ./database/sql/:/docker-entrypoint-initdb.d

#Elastic stack
  elasticsearch:
    build: elasticsearch/
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
  logstash:
    build: logstash/
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./logstash/config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
      - "5044:5044"
    depends_on:
      - elasticsearch
  kibana:
    build: kibana/
    volumes:
      - ./kibana/config/:/etc/kibana/
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

# App Databases
  mysql:
    restart: always
    build: apps/mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - ./apps/mysql:/docker-entrypoint-initdb.d
      - mysql:/var/lib/mysql
    env_file:
        - variables.env

#  postgres:
#    restart: always
#    build: apps/postgresql
#    expose:
#      - "5432"
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres:/var/lib/postgresql/data
#    env_file:
#      - variables.env


# Apps
#  python:
#    build: apps/python
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - .:/code
#    ports:
#      - "8000:8000"
#    depends_on:
#      - postgres

  php:
    build: apps/php
    restart: always
    working_dir: /project
    ports:
      - "9090:80"
      - "443:443"
    volumes:
      - ./apps/php/application:/project
    depends_on:
      - mysql
    links:
      - logstash
    env_file:
      - variables.env

  #nodejs:
#  build: apps/nodejs
#    restart: always
#    ports:
#      - "3030:3000"
#    volumes:
#       - ./apps/nodejs/app:/src/app
#    depends_on:
#      - mysql
#    env_file:
#      - variables.env

volumes:
  mysql:
    driver: local
#  postgres:
#    driver: local
